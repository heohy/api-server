{"ast":null,"code":"import axios from 'axios';\nimport crypto from 'crypto-js';\nexport async function SignInValidate(state) {\n  const errMessage = [];\n  let signin_validate = true;\n  let hash_password = \"\";\n  await axios.post(\"http://127.0.0.1:5000/signin_validate\", {\n    username: state.username,\n    password: state.password\n  }).then(res => {\n    signin_validate = res.data[0]['confirm'];\n    hash_password = res.data[0]['hash_password'];\n    console.log(res.data[0]);\n    console.log(signin_validate);\n  }).catch(err => {\n    console.log(err);\n  });\n\n  if (signin_validate === false) {\n    errMessage.push(\"존재하지 않는 아이디 입니다.\");\n  } else {\n    const input_password = state.password;\n    const db_password = crypto.AES.decrypt(hash_password, process.env.REACT_APP_HASH_KEY).toString(crypto.enc.Utf8);\n    console.log(input_password);\n    console.log(db_password);\n\n    if (input_password !== db_password) {\n      errMessage.push(\"비밀번호가 일치하지 않습니다.\");\n      signin_validate = false;\n    }\n  }\n\n  return {\n    validate: signin_validate,\n    errorMessage: errMessage\n  };\n}\n_c = SignInValidate;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInValidate\");","map":{"version":3,"sources":["C:/Users/heohy/Desktop/Project/api-server/react-server/src/lib/SignInValidate.js"],"names":["axios","crypto","SignInValidate","state","errMessage","signin_validate","hash_password","post","username","password","then","res","data","console","log","catch","err","push","input_password","db_password","AES","decrypt","process","env","REACT_APP_HASH_KEY","toString","enc","Utf8","validate","errorMessage"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,eAAeC,cAAf,CAA8BC,KAA9B,EAAqC;AACxC,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAIC,eAAe,GAAG,IAAtB;AACA,MAAIC,aAAa,GAAG,EAApB;AAEA,QAAMN,KAAK,CAACO,IAAN,CAAW,uCAAX,EAAoD;AACtDC,IAAAA,QAAQ,EAAEL,KAAK,CAACK,QADsC;AAEtDC,IAAAA,QAAQ,EAAEN,KAAK,CAACM;AAFsC,GAApD,EAGHC,IAHG,CAGGC,GAAD,IAAS;AACbN,IAAAA,eAAe,GAAGM,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAY,SAAZ,CAAlB;AACAN,IAAAA,aAAa,GAAGK,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAY,eAAZ,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,eAAZ;AACH,GARK,EAQHU,KARG,CAQIC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,GAVK,CAAN;;AAYA,MAAGX,eAAe,KAAK,KAAvB,EAA8B;AAC1BD,IAAAA,UAAU,CAACa,IAAX,CAAgB,kBAAhB;AACH,GAFD,MAEO;AACH,UAAMC,cAAc,GAAGf,KAAK,CAACM,QAA7B;AACA,UAAMU,WAAW,GAAGlB,MAAM,CAACmB,GAAP,CAAWC,OAAX,CAAmBf,aAAnB,EAAkCgB,OAAO,CAACC,GAAR,CAAYC,kBAA9C,EAAkEC,QAAlE,CAA2ExB,MAAM,CAACyB,GAAP,CAAWC,IAAtF,CAApB;AAEAd,IAAAA,OAAO,CAACC,GAAR,CAAYI,cAAZ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;;AAEA,QAAID,cAAc,KAAKC,WAAvB,EAAoC;AAChCf,MAAAA,UAAU,CAACa,IAAX,CAAgB,kBAAhB;AACAZ,MAAAA,eAAe,GAAG,KAAlB;AACH;AACJ;;AAED,SAAO;AACHuB,IAAAA,QAAQ,EAAEvB,eADP;AAEHwB,IAAAA,YAAY,EAAEzB;AAFX,GAAP;AAIH;KApCqBF,c","sourcesContent":["import axios from 'axios';\r\nimport crypto from 'crypto-js';\r\n\r\nexport async function SignInValidate(state) {\r\n    const errMessage = [];\r\n    let signin_validate = true;\r\n    let hash_password = \"\";\r\n\r\n    await axios.post(\"http://127.0.0.1:5000/signin_validate\", {\r\n        username: state.username,\r\n        password: state.password\r\n    }).then((res) => {\r\n        signin_validate = res.data[0]['confirm'];\r\n        hash_password = res.data[0]['hash_password'];\r\n        console.log(res.data[0]);\r\n        console.log(signin_validate);\r\n    }).catch((err) => {\r\n        console.log(err);\r\n    })\r\n\r\n    if(signin_validate === false) {\r\n        errMessage.push(\"존재하지 않는 아이디 입니다.\")\r\n    } else {\r\n        const input_password = state.password;\r\n        const db_password = crypto.AES.decrypt(hash_password, process.env.REACT_APP_HASH_KEY).toString(crypto.enc.Utf8);\r\n\r\n        console.log(input_password);\r\n        console.log(db_password);\r\n\r\n        if (input_password !== db_password) {\r\n            errMessage.push(\"비밀번호가 일치하지 않습니다.\")\r\n            signin_validate = false;\r\n        }\r\n    }\r\n\r\n    return({\r\n        validate: signin_validate,\r\n        errorMessage: errMessage\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}